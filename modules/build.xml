<?xml version="1.0" encoding="UTF-8"?>

<project name="OpenCms Common Modules" default="war" basedir=".">
	<property file="${basedir}/../xbuild.properties" />
	<property name="app.name" 							value="opencms" />
 	<property name="opencms.input" 						location="${basedir}/.." />
	<property name="opencms.output" 					location="${opencms.input}/../BuildCms" />
 	<property name="opencms.setup.input" 				location="${opencms.input}/webapp/setup" />
 	<property name="opencms.config.input" 				location="${opencms.input}/webapp/WEB-INF/config" />
    <property name="opencms.input.libs.runtime"			location="${opencms.input}/lib/runtime" />
    <property name="opencms.input.libs.compile"			location="${opencms.input}/lib/compile" />
	<property name="opencms.output.jars-components"		location="${opencms.output}/build/jars-components" />
    <property name="opencms.output.distfiles"           location="${opencms.output}/zip" />    
    <property name="excludes"                  			value="**/CVS/*,**/.cvsignore,**/.nbattrs,**/.project,**/.classpath" />
    <property name="java.target.version"                value="1.6" />
	<property name="enhance"                            value="0" />
	
	
	<!-- 
		Set/Override this property to one of the following values: 
		- interactive: interactive GUI based module selection.
		- selection: module selection based on modules.common.selection property
		- all: module selection based on modules.common.all property defined in the all-modules.properties file
	-->
	<property name="modules.selection.mode"				value="interactive" />
	
 	<taskdef resource="net/sf/antcontrib/antlib.xml" loaderref="contrib">
	  <classpath>
	    <pathelement location="${opencms.input.libs.compile}/ant-contrib-1.0b1.jar"/>
	  </classpath>
	</taskdef>
	
	<target name="init-opencmstasks">
		<ant antfile="${opencms.input}/build.xml" dir="${opencms.input}" inheritall="false" target="init-components"/>
		<taskdef resource="org/opencms/util/ant/taskdefs.properties" loaderref="opencms">
			<classpath>
				<pathelement location="${opencms.output.jars-components}/ant-opencms.jar" />
				<pathelement location="${opencms.output.jars-components}/gwt-opencms.jar" />
				<pathelement location="${opencms.input.libs.runtime}/commons-digester-1.8.jar" />
				<pathelement location="${opencms.input.libs.runtime}/commons-logging-1.1.1.jar" />
				<pathelement location="${opencms.input.libs.runtime}/commons-collections-3.2.1.jar" />
				<pathelement location="${opencms.input.libs.runtime}/commons-beanutils-1.8.3.jar" />
				<pathelement location="${opencms.input.libs.runtime}/gwt-dev-2.2.0.jar" />
				<pathelement location="${opencms.input.libs.runtime}/gwt-user-2.2.0.jar" />
				<pathelement location="${opencms.input.libs.runtime}/dom4j-1.6.1.jar" />
				<pathelement location="${opencms.input.libs.runtime}/jaxen-1.1.1.jar" />
				<pathelement location="${opencms.input.libs.runtime}/jug-lgpl-2.0.0.jar" />
			</classpath>
		</taskdef>
	</target>
	
	<target name="initmodulenames">
		<property file="${basedir}/all-modules.properties" />
		<var name="modules.common.collect" value="${modules.common.all}" />
		<if>
		<isset property="externaldirectories" />
		<then>
		<for list="${externaldirectories}" param="exdir">
			<sequential>
				<var name="modules.common.all" unset="true" />
				<property file="@{exdir}/modules/all-modules.properties" />
				<var name="modules.common.collect" value="${modules.common.collect},${modules.common.all}" />
			</sequential>
		</for>
		</then>
		</if>
		<var name="modules.common.all" unset="true" />
		<property name="modules.common.all" value="${modules.common.collect}" />
	</target>
	
	<!-- 
	  -	initializes the selection mode
	  -->
    <target name="init" depends="initmodulenames, init-opencmstasks">
    	<echo message="all: ${basedir}"/>
    	<if>
    		<not><isset property="modules.common.all" /></not>
    	  <then>
    		<fail>
    			property modules.common.all undefined.
    		</fail>
    	  </then>
    	  <else>
    	  	<echo message="all: ${modules.common.all}"/>
    	  </else>
    	</if>
        <sortlist property="modules.all.sort" value="${modules.common.all}" override="true" />
    	<if>
			<equals arg1="${modules.selection.mode}" arg2="interactive" />
			<then>
				<!-- interactive mode -->
				<if>
					<isset property="modules.common.selection"/>
					<then>
					  	<selectionprompt 
					  	  	property="modules.common.interactive"
					  	    defaultvalue="${modules.common.selection}"
					  		allvalues="${modules.all.sort}"
					  		prompt="Please select the modules to process:"
					  		title="Module Selection" 
					  		columns="2"
					  	/>
					</then>
					<else>
					  	<selectionprompt 
					  	  	property="modules.common.interactive"
					  	    defaultvalue=""
					  		allvalues="${modules.all.sort}"
					  		prompt="Please select the modules to process:"
					  		title="Module Selection"
					  		columns="2"
					  	/>
					</else>
				</if>
			    <if>
			      <equals arg1="${modules.common.interactive}" arg2="__ABORT__" />
			      <then>
			    	<fail>aborted by User</fail>
			      </then>
			    </if>
				<property name="modules.var" value="${modules.common.interactive}" />
			</then>
			<elseif>
				<equals arg1="${modules.selection.mode}" arg2="selection" />
				<then>
					<!-- selection mode -->
					<property name="modules.var" value="${modules.common.selection}" />
				</then>
			</elseif>
			<else>
				<!-- all mode -->
				<property name="modules.var" value="${modules.common.all}" />
			</else>
    	</if>
        <sortlist property="modules.var" value="${modules.var}" override="true" />
    </target>

	<!-- 
	  -	Build dependencies
	  -->
	<target name="dependencies" >
		<!-- just redirect back to the calling build-single script, for avoiding ant's recursive loop check -->
	  	<ant antfile="${basedir}/build-single.xml" target="dist" inheritAll="false" >
	  		<property name="module.name" value="${module.name}" />
	  	</ant>
	</target>
	
    <target name="clean" 
    	depends="init" description="Cleans the given module generation directories">
    	
    	<for list="${modules.var}" param="module" trim="yes">
    	  <sequential>
    	  	<ant antfile="${basedir}/build-single.xml" target="clean" inheritAll="false" >
    	  		<property name="module.name" value="@{module}" />
    	  	</ant>
    	  </sequential>
    	</for>
    </target>        
	
    <target name="compile-gwt" 
    	depends="init" description="GWT Compile the given modules">
    	
		<ant antfile="${opencms.input}/build.xml" dir="${opencms.input}" inheritall="false" target="setup-jar"/>
    	<for list="${modules.var}" param="module" trim="yes">
    	  <sequential>
    	  	<ant antfile="${basedir}/build-single.xml" target="compile-gwt" inheritAll="false" >
    	  		<property name="module.name" value="@{module}" />
    	  	</ant>
    	  </sequential>
    	</for>
    </target>        
	
    <target name="compile" 
    	depends="init" description="Compile the given modules">
    	
		<ant antfile="${opencms.input}/build.xml" dir="${opencms.input}" inheritall="false" target="setup-jar"/>
    	<for list="${modules.var}" param="module" trim="yes">
    	  <sequential>
    	  	<ant antfile="${basedir}/build-single.xml" target="compile" inheritAll="false" >
    	  		<property name="module.name" value="@{module}" />
    	  	</ant>
    	  </sequential>
    	</for>
    </target>        
	
    <target name="jar" 
    	depends="init" description="Generates the given .jar files">
	
		<ant antfile="${opencms.input}/build.xml" dir="${opencms.input}" inheritall="false" target="setup-jar"/>
    	<for list="${modules.var}" param="module" trim="yes">
    	  <sequential>
    	  	<ant antfile="${basedir}/build-single.xml" target="jar" inheritAll="false" >
    	  		<property name="module.name" value="@{module}" />
    	  	</ant>
    	  </sequential>
    	</for>
    </target>
    			
    <target name="dist" 
    	depends="init" description="Generates the given independent distros">
	
		<ant antfile="${opencms.input}/build.xml" dir="${opencms.input}" inheritall="false" target="setup-jar"/>
    	<for list="${modules.var}" param="module" trim="yes">
    	  <sequential>
    	  	<ant antfile="${basedir}/build-single.xml" target="dist" inheritAll="false" >
    	  		<property name="module.name" value="@{module}" />
    	  	</ant>
    	  </sequential>
    	</for>
    </target>
    			
    <target name="tomcat.copy" 
    	depends="init" description="Copies the given updated modules to Tomcat directory">
	
		<ant antfile="${opencms.input}/build.xml" dir="${opencms.input}" inheritall="false" target="tomcat.copy" />
    	<for list="${modules.var}" param="module" trim="yes">
    	  <sequential>
    	  	<ant antfile="${basedir}/build-single.xml" target="tomcat.copy" inheritAll="false" >
    	  		<property name="module.name" value="@{module}" />
    	  	</ant>
    	  </sequential>
    	</for>
    </target>
    			
    <target name="tomcat.update" 
    	depends="init" description="Recompiles changes and installs them in Tomcat webapps directory">
	
		<ant antfile="${opencms.input}/build.xml" dir="${opencms.input}" inheritall="false" target="tomcat.update" />
    	<for list="${modules.var}" param="module" trim="yes">
    	  <sequential>
    	  	<ant antfile="${basedir}/build-single.xml" target="tomcat.update" inheritAll="false" >
    	  		<property name="module.name" value="@{module}" />
    	  	</ant>
    	  </sequential>
    	</for>
    </target>
    			
    <target name="tomcat.all" 
    	depends="init" description="Does a complete recompile of the module and installs it in Tomcat webapps directory">
	
		<ant antfile="${opencms.input}/build.xml" dir="${opencms.input}" inheritall="false" target="tomcat.all" />
    	<for list="${modules.var}" param="module" trim="yes">
    	  <sequential>
    	  	<ant antfile="${basedir}/build-single.xml" target="tomcat.all" inheritAll="false" >
    	  		<property name="module.name" value="@{module}" />
    	  	</ant>
    	  </sequential>
    	</for>
    </target>

    <target name="jboss.copy" 
    	depends="init" description="Copies the given updated modules to Jboss directory">
	
		<ant antfile="${opencms.input}/build.xml" dir="${opencms.input}" inheritall="false" target="jboss.copy" />
    	<for list="${modules.var}" param="module" trim="yes">
    	  <sequential>
    	  	<ant antfile="${basedir}/build-single.xml" target="jboss.copy" inheritAll="false" >
    	  		<property name="module.name" value="@{module}" />
    	  	</ant>
    	  </sequential>
    	</for>
    </target>

	<target name="jboss.update" 
    	depends="init" description="Recompiles changes and installs them in JBoss deploy directory">
	
		<ant antfile="${opencms.input}/build.xml" dir="${opencms.input}" inheritall="false" target="jboss.update" />
    	<for list="${modules.var}" param="module" trim="yes">
    	  <sequential>
    	  	<ant antfile="${basedir}/build-single.xml" target="jboss.update" inheritAll="false" >
    	  		<property name="module.name" value="@{module}" />
    	  	</ant>
    	  </sequential>
    	</for>
    </target>
    			
	<target name="war"
		depends="dist" description="Updates the war file">
		
		<!-- be sure that the war file is uptodate -->
		<ant antfile="${opencms.input}/build.xml" target="war"/>

        <!-- tmp dir for WEB-INF/lib -->
		<mkdir dir="${opencms.output}/build/jars-modules" />

    	<!-- tmp dir for WEB-INF/packages/modules -->
		<mkdir dir="${opencms.output}/build/zips-modules" />

		<!-- get the jars and zips -->
		<for list="${modules.var}" param="module" trim="yes">
    	  <sequential>
    		<if>
    			<available file="${opencms.output}/build/jars-@{module}" />
    			<then>
    	           <copy todir="${opencms.output}/build/jars-modules" >   
    			    <fileset dir="${opencms.output}/build/jars-@{module}">
    			      <include name="*.jar"/>
    			    </fileset>
    	           </copy>
    			</then>		
     		</if>
           <copy todir="${opencms.output}/build/zips-modules" >   
		    <fileset dir="${opencms.output.distfiles}">
		      <include name="@{module}_*.zip"/>
		    </fileset>
           </copy>
    	  </sequential>
    	</for>

		<!-- update the war file -->
		<war destfile="${opencms.output}/build/${app.name}.war" update="true" >            	     		
            <zipfileset dir="${opencms.output}/build/zips-modules" prefix="WEB-INF/packages/modules" includes="*.zip" />   
            <zipfileset dir="${opencms.output}/build/jars-modules" prefix="WEB-INF/lib" includes="*.jar" />   
        </war>              
		
		<!-- delete tmp dirs -->		
		<delete dir="${opencms.output}/build/jars-modules" />
		<delete dir="${opencms.output}/build/zips-modules" />		
		
	</target>

</project>
