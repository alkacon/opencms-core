@external multiLineLabel, oc-spinner, oc-spinner-circle, oc-spinner-dots, oc-spinner-bg, oc-spin-center, opencms, oc-screensize-medium; 

.truncatingLabel{
	overflow: hidden;
	white-space: nowrap;
	cursor: default;
	text-overflow: ellipsis;
}

.inlineBlock {
	display: inline-block;
}

.truncatingLabel.multiLineLabel{
	white-space: normal;
}

.toolTip *{
	margin: 0;
	padding: 0;
	border: none;
	color: value("constants.css.textColor");
	font-family: value("constants.css.fontFamily");
	font-size: value("constants.css.fontSize");
	font-weight: normal;
	line-height: value("constants.css.lineHeight");
	background: transparent;
	text-align: left;
	height: auto;
	width: auto;
	min-height: 0;
	max-height: none;
	min-width: 0;
	max-width: none;
}
div.toolTip.cornerAll, div.toolTip {
	position: absolute;
	z-index: value("constants.css.zIndexDND");
	border: 1px solid value("constants.css.borderColor");
	background: value("constants.css.backgroundColorMenu");
	padding: 4px;
	font-family: value("constants.css.fontFamily");
	font-size: value("constants.css.fontSizeSmall");
	font-weight: normal;
	color: value("constants.css.textColor");
}

.toolTip {
	opacity: 0.85;
}

.toolTip p{
	white-space: nowrap;
	margin: 0px;
	padding: 0px;
}

div.header{
	border: 2px solid value("constants.css.borderColor");
	background: value("constants.css.backgroundColorDialog");
	width: value("constants.css.toolbarWidth");
	padding: 10px 0px 5px 0px;
	margin: 0px auto 10px;
	position: relative;
}

body.oc-screensize-medium div.header { 
	width: eval("org.opencms.gwt.client.CmsWidthConstants.mediumLow()");
}

/** joined vendor prefix style, for better fall back behavior */
div.header{
	background-image: value("constants.css.gradientFormDialog");
}

div.header h2{
	font-size: value("constants.css.fontSizeBig");
	font-weight: bold;
	margin: 0px;
	vertical-align: middle;
}

div.header > div{
	float:left;
	font-size: value("constants.css.fontSize");
	margin: 0px 0px 0px 10px;
	vertical-align: middle;
}
div.header p{
	font-size: value("constants.css.fontSize");
	margin: 8px 0px;
}

div.header .headerLeftBlock {
	display: flex;
	width: calc(100% - 10px);
}

div.header .headerPathSection {
	display: flex;
}

div.header .headerPathSection > div:first-child {
	flex: 1;
}

div.header .headerPathButtons {
	margin-left: auto;
	margin-right: 3px;
}

div.header .headerTextSection {
	flex: 1;
	margin-left: 10px;
}

div.header div.headerButtons{
	position: absolute;
	top: 10px;
	right: 20px;
}

div.header div.headerButtons > div{
	float: right;
}

/** Override some Vaadin CSS rules. */ 
div.header h2 { 
	margin-top: 0px !important; 
}

.textSmall, div.textSmall{
	font-family: value("constants.css.fontFamily");
	font-size: value("constants.css.fontSizeSmall");
	line-height: value("constants.css.lineHeightSmall");
}
.textMedium, div.textMedium{
	font-family: value("constants.css.fontFamily");
	font-size: value("constants.css.fontSize");
	line-height: value("constants.css.lineHeight");
}
.textBig, div.textBig{
	font-family: value("constants.css.fontFamily");
	font-size: value("constants.css.fontSizeBig");
	line-height: value("constants.css.lineHeightBig");
}

.border {
	border: 1px solid value("constants.css.borderColor");
}

.cellpadding {
	padding: 2px 0px;
}

.clearAll{
	height: 0px;
	clear: both;
	margin: 0px;
	border: none;
}

/** Following is a clear-fix for containers with floated content, forcing the container to enclose its content.
    @see http://www.positioniseverything.net/easyclearing.html */
.clearFix:after {
    content: ".";
    display: block;
    height: 0 !important;
    min-height: 0 !important;
    clear: both;
    visibility: hidden;
    overflow: hidden !important;
}

div.disablingOverlay{
	background-image: value("constants.css.gradientInvalid");
	display: block;
	position:absolute;
	z-index: value("constants.css.zIndexInline");
	top: 0px;
	left: 0px;
	right: 0px;
	bottom: 0px;
	visibility: visible;
}

.hideOverlay div.disablingOverlay{
	background: transparent;
}
.cornerAll{
	border-radius: value("constants.css.borderRadius");
}
.buttonCornerAll{
	border-radius: value("constants.css.borderRadiusButton");
}
.cornerBottom{
	border-bottom-left-radius: value("constants.css.borderRadius");
	border-bottom-right-radius: value("constants.css.borderRadius");
}
.cornerTop{
	border-top-left-radius: value("constants.css.borderRadius");
	border-top-right-radius: value("constants.css.borderRadius");
}
.shadow{
	box-shadow: value("constants.css.boxShadow");
}

.clearStyles, .clearStyles *{
	margin: 0;
	padding: 0;
	border: none;
	color: value("constants.css.textColor");
	font-family: value("constants.css.fontFamily");
	font-size: value("constants.css.fontSize");
	font-weight: normal;
	line-height: value("constants.css.lineHeight");
	background: transparent;
	text-align: left;
	height: auto;
	width: auto;
	min-height: 0;
	max-height: none;
	min-width: 0;
	max-width: none;
}

div.simpleFormRow{
	height: 34px;
	display: flex;
	align-items: center; 
}
div.simpleFormLabel{
	width: 25%;
}
div.simpleFormInputBox{
	width: 75%;
}

/** loading animation styles */
.oc-spinner-bg {
	background-color: #fff;        
	top:0;
	margin:0;
	border-radius: 100%;    
	display: block;
	box-shadow: 0 0 32px #666;
	height: 60px;
	width: 60px;
	position: absolute;
}

.oc-spinner, .oc-spinner-circle, .oc-spinner-dots  { 
	top: -2px;
	margin: 0;
	display: block;
	position: absolute;
	font-size: 64px !important;
	line-height: 64px !important;
	font-family: opencms-font !important;
}

.oc-spinner {
	color: #b31b34;
}

.oc-spinner-dots {
	color: #fff;
	animation: spin 2s infinite linear;
	-webkit-animation: spin 2s infinite linear;
}
	
.oc-spinner-circle {
	color: #003084;
	margin: 0 auto;
	animation: spin-inner 4s infinite linear;
	-webkit-animation: spin-inner 4s infinite linear;
}

.oc-spin-center {
	position: fixed;
	left: 50%;
	top: 50%;  
	text-align: center;
	margin-top: -50px;
	margin-left: -32px; 
	display: block;
}

@keyframes spin-inner {
    50% {
        opacity: 0.25;
    }
    100% {
        opacity: 1;
    }
}
@-webkit-keyframes spin-inner {
    50% {
        -webkit-opacity: 0.25;
    }
    100% {
        -webkit-opacity: 1;
    }
}

@-webkit-keyframes spin {
	0% { 
		-webkit-transform: rotate(0deg);
	} 

    100% {
        -webkit-transform: rotate(360deg);
    }
}

@keyframes spin {
	0% { 
		transform: rotate(0deg);
	} 

    100% {
        transform: rotate(360deg);
    }
}
